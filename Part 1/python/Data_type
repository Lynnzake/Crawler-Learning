                #print("hello python") #仅能注释一行，即其后的部分，若要注释多行，则用三引号
print("Je mapelle lynn")
'''
print()
number is nothing
number means variables
'''
char=input("请输入字符")#python接收输入的字符串
print(char)


a=5;
a+=1;           #a+=b--->a=a+b
print(a);
                #python 中不需要声明数据类型

list=["My","Love"];
print(list);
                #python中没有数组，使用列表以及元组（turple）代替数组的使用
print(list[1]);
                #输出Love
list[1]="mother";
print(list);
                #对列表相应元素进行赋值，此时list=["My","mother']
turple=("something","goes","wrong");#给元组赋值
print("元组=","turple");
'''
import matplotlib.pyplot as plt#plt用于显示图片
import matplotlib.image as mpimg#mpimg用于读取图片
import numpy as np

tur_list=mpimg.imread(image1.JPG);#读取和代码位于同一目录下的图片
#此时tur_list已经使一个np.array了，可以对它进行任意处理

plt.imshow(tur_list);
以上为numpy实现

'''

print(turple[0]);#元组的元素取用同列表相同，但与列表不同的是，元组内的元素不能更改

#以上为列表，元组数据类型

sa="sdijfienasid";
sb="sdafsdifends";
sc=set(sa);
sd=set(sb);
se=sc-sd;       #求补集
print(se);
print(sc);
print(sc&sd);   #求交集用&，集合使用中括号表示；求并集则用|表示
print(sc|sd);
sf={'1','a','rf','s'};
print(sf);      #此时sf乱序输出,即与初始赋值顺序不同

dict1={"key0":"value0","key1":"value1"};
print(dict1);
dict2={"name":"lifei","sex":"female"};
print(dict2);
print(dict2["name"]);#字典的引用同样使用方括号
del dict1["key0"]    #删除键时"key0"的条目
dict1.clear()        #清空字典所有条目
#del dict1           #删除字典

'''
字典键的特性：值可以时任何python对象；但键必须时不变的值，可以是数字，字符或元组，
但不能是列表
1	dict.clear()
删除字典内所有元素
2	dict.copy()
返回一个字典的浅复制

3	dict.fromkeys(seq,[val])
>>> list=[1,2,3,4]
>>> dict1=dict.fromkeys(list,[8,9,20,22])
>>> print(dict1)
{1: [8, 9, 20, 22], 2: [8, 9, 20, 22], 3: [8, 9, 20, 22], 4: [8, 9, 20, 22]}

创建一个新字典，以序列 seq 中元素做字典的键，val 为字典所有键对应的初始值

4	dict.items()
>>> dict1.items()
以列表返回可遍历的(键, 值) 元组数组
5	dict.keys()
    dict1.keys()
以列表返回一个字典所有的键

6	dict.update(dict2)
    dict1.update(dict2)
    print(dict1)
>>>{1: [8, 9, 20, 22], 2: [8, 9, 20, 22], 3: [8, 9, 20, 22], 4: [8, 9, 20, 22],
'name': 'lifei', 'sex': 'female'}
把字典dict2的键/值对更新加入到dict里
7	dict.values()
以列表返回字典中的所有值

'''



